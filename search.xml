<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Arch Linux从终端到 桌面</title>
      <link href="/2025/01/14/Arch%20Linux%20%E4%BB%8E%E7%BB%88%E7%AB%AF%E5%88%B0%E6%A1%8C%E9%9D%A2/"/>
      <url>/2025/01/14/Arch%20Linux%20%E4%BB%8E%E7%BB%88%E7%AB%AF%E5%88%B0%E6%A1%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Arch-Linux-macOS-风格暗色主题美化指南"><a href="#Arch-Linux-macOS-风格暗色主题美化指南" class="headerlink" title="Arch Linux macOS 风格暗色主题美化指南"></a>Arch Linux macOS 风格暗色主题美化指南</h1><p>本指南将引导您完成 Arch Linux 的 macOS 风格美化，并解决安装过程中可能遇到的常见问题。</p><h2 id="1-选择并安装桌面环境"><a href="#1-选择并安装桌面环境" class="headerlink" title="1. 选择并安装桌面环境"></a>1. 选择并安装桌面环境</h2><p>推荐使用 <strong>KDE Plasma</strong>，因为其高度可定制且已有丰富的 macOS 风格主题 <a href="https://www.reddit.com/r/arch/comments/1l0nhcg/macos_styled_arch_linux/#:~:text=Everything%20is%20easier%20with%20KDE">reddit.com</a>。</p><p>安装命令示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma kde-gtk-config sddm</span><br><span class="line">systemctl <span class="built_in">enable</span> sddm.service</span><br></pre></td></tr></table></figure><h2 id="2-解决-pacman-的“404-Not-Found”错误"><a href="#2-解决-pacman-的“404-Not-Found”错误" class="headerlink" title="2. 解决 pacman 的“404 Not Found”错误"></a>2. 解决 <code>pacman</code> 的“404 Not Found”错误</h2><p>在全新安装的 Arch Linux 系统上，更新软件包时，您可能会遇到“404 Not Found”的错误。这通常不是网络问题，而是软件包数据库不同步所致。</p><h3 id="2-1-问题现象：熟悉的-404-Not-Found"><a href="#2-1-问题现象：熟悉的-404-Not-Found" class="headerlink" title="2.1. 问题现象：熟悉的 404 Not Found"></a>2.1. 问题现象：熟悉的 404 Not Found</h3><p>在更新过程中，你可能会看到类似下面的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Total (167/513)</span><br><span class="line">error: failed retrieving file <span class="string">&#x27;harfbuzz-11.3.3-1-x86_64.pkg.tar.zst&#x27;</span> from mirrors.jlu.edu.cn : The requested URL returned error: 404</span><br><span class="line">error: failed retrieving file <span class="string">&#x27;harfbuzz-11.3.3-1-x86_64.pkg.tar.zst&#x27;</span> from mirrors.tuna.tsinghua.edu.cn : Operation too slow...</span><br><span class="line">error: failed retrieving file <span class="string">&#x27;vapoursynth-R70-2-x86_64.pkg.tar.zst&#x27;</span> from mirrors.xjtu.edu.cn : The requested URL returned error: 404</span><br><span class="line">...</span><br><span class="line">error: failed to commit transaction (failed to retrieve some files)</span><br><span class="line">Errors occurred, no packages were upgraded.</span><br></pre></td></tr></table></figure><p><strong>关键特征分析</strong>：</p><ul><li><strong>部分成功</strong>：系统成功下载了大部分软件包，证明你的网络连接是通畅的。</li><li><strong>核心错误</strong>：最主要的错误是 <code>The requested URL returned error: 404</code>。HTTP 404 错误码的含义是“Not Found”（未找到），这意味着服务器明确表示它没有客户端正在请求的这个文件。</li><li><strong>普遍性</strong>：这个 404 错误在多个不同的镜像源（如吉林大学、西安交大、阿里云等）上都出现了。</li><li><strong>次要错误</strong>：像清华源出现的 <code>Operation too slow</code> (操作超时) 错误，在这种情况下通常是次要症状。当与普遍的 404 错误一起出现时，它很可能也是由同样根本原因引发的。</li></ul><h3 id="2-2-根本原因：本地与远程数据库的“时差”"><a href="#2-2-根本原因：本地与远程数据库的“时差”" class="headerlink" title="2.2. 根本原因：本地与远程数据库的“时差”"></a>2.2. 根本原因：本地与远程数据库的“时差”</h3><p>当多个可靠的镜像源都告诉你“文件不存在”时，问题几乎可以肯定不在于服务器，而在于<strong>你的请求本身是错误的</strong>。</p><p>这个问题的核心是：<strong>你的本地软件包数据库与远程镜像服务器上的实际文件列表不同步。</strong></p><p>我们可以用一个简单的“购物清单”比喻来理解这个过程：</p><ol><li><strong>Arch Linux 的世界在滚动</strong>：作为一个滚动发行版，Arch Linux 的软件包更新非常频繁。维护者可能刚刚将 <code>harfbuzz</code> 包从 <code>11.3.3-1</code> 版本更新到了 <code>11.3.4-1</code>。</li><li><strong>镜像服务器紧随其后</strong>：世界各地的镜像服务器（商店）在几小时甚至几分钟内就会同步这次更新。它们会下架旧版本的商品 (<code>...11.3.3-1.pkg.tar.zst</code>)，然后摆上新版本的商品 (<code>...11.3.4-1.pkg.tar.zst</code>)。</li><li><strong>你手里的“购物清单”过时了</strong>：你系统里的 <code>pacman</code> 本地数据库就是这张“购物清单”。如果你有一段时间没有刷新它，它上面记录的 <code>harfbuzz</code> 最新版依然是旧的 <code>11.3.3-1</code>。</li><li><strong>拿着旧清单去购物</strong>：当你运行 <code>pacman -Syu</code> 时，<code>pacman</code> 就拿着这张旧清单去服务器（商店）上，要求购买旧版本的 <code>harfbuzz</code>。</li><li><strong>服务器的无奈回应</strong>：服务器翻遍了货架，发现这个旧版本的商品已经下架了，只能无奈地告诉你：“抱歉，没有这个文件”——这就是你看到的 <code>404 Not Found</code>。</li></ol><h3 id="2-3-解决方案：强制刷新你的“购物清单”"><a href="#2-3-解决方案：强制刷新你的“购物清单”" class="headerlink" title="2.3. 解决方案：强制刷新你的“购物清单”"></a>2.3. 解决方案：强制刷新你的“购物清单”</h3><p>既然问题是“购物清单”过时了，那么解决方案就非常直观：<strong>在购物前，先从商店获取一份最新的商品目录。</strong></p><p>在 Arch Linux 中，这对应一个非常简单的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syyu</span><br></pre></td></tr></table></figure><p><strong>这个命令为什么能解决问题？</strong></p><p>让我们来分解一下参数：</p><ul><li><code>S</code>: Sync，同步软件包。</li><li><code>y</code>: Refresh，刷新本地软件包数据库。</li><li><code>yy</code>: <strong>Force Refresh</strong>，强制刷新。这是解决问题的关键！使用一个 <code>y</code> 时，如果 <code>pacman</code> 觉得本地数据库还“挺新的”，可能就不会去下载。而使用 <code>yy</code> 则会告诉 <code>pacman</code>：“别管本地的了，无条件地从服务器下载一份全新的数据库文件！” 这确保了你的“购物清单”与服务器的货架完全同步。</li><li><code>u</code>: Upgrade，升级系统中所有可更新的软件包。</li></ul><p>执行 <code>pacman -Syyu</code> 后，<code>pacman</code> 会：</p><ol><li>首先，强制从你配置的镜像源下载最新的数据库文件。</li><li>然后，根据这份全新的数据库来比较你已安装的软件包。</li><li>最后，下载服务器上确实存在的、正确的新版本软件包。</li></ol><p>这一次，下载过程应该会畅通无阻，顺利完成。</p><h3 id="2-4-延伸与最佳实践"><a href="#2-4-延伸与最佳实践" class="headerlink" title="2.4. 延伸与最佳实践"></a>2.4. 延伸与最佳实践</h3><ul><li><p><strong>如果 <code>pacman -Syyu</code> 仍然失败怎么办？</strong><br>虽然可能性很小，但如果你恰好连接到了一个正在同步、暂时不完整的镜像，可能会再次失败。此时，最佳做法是使用 <code>reflector</code> 工具重新生成一份当前状态最佳的镜像列表，然后再执行 <code>pacman -Syyu</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如，重新筛选中国最快的镜像</span></span><br><span class="line">reflector --country China --age 12 --protocol https --<span class="built_in">sort</span> rate --save /etc/pacman.d/mirrorlist</span><br><span class="line"><span class="comment"># 然后再次强制更新</span></span><br><span class="line">pacman -Syyu</span><br></pre></td></tr></table></figure></li><li><p><strong>养成好习惯</strong><br>为了避免再次遇到这个问题，建议定期运行 <code>pacman -Syu</code> 来更新你的系统。你更新得越频繁，本地与远程数据库之间出现巨大差异的可能性就越小。如果你隔了很长时间（比如一周以上）没有更新，直接使用 <code>pacman -Syyu</code> 会是更稳妥的选择。</p></li></ul><h3 id="2-5-总结"><a href="#2-5-总结" class="headerlink" title="2.5. 总结"></a>2.5. 总结</h3><p><code>pacman</code> 的 404 错误是每个 Arch 用户成长路上的必经之路。它并非可怕的网络故障，而是一个美丽的提醒，告诉你正身处一个不断滚动的世界。理解了其背后的数据库同步机制，这个曾经让你头疼的错误，就会变成一个可以用 <code>pacman -Syyu</code> 轻松解决的小插曲。</p><h2 id="3-创建新用户并配置环境"><a href="#3-创建新用户并配置环境" class="headerlink" title="3. 创建新用户并配置环境"></a>3. 创建新用户并配置环境</h2><p>在安装完桌面环境后，您需要创建一个普通用户并配置好相应的环境。</p><h3 id="3-1-第一步：进入-TTY-虚拟控制台"><a href="#3-1-第一步：进入-TTY-虚拟控制台" class="headerlink" title="3.1. 第一步：进入 TTY 虚拟控制台"></a>3.1. 第一步：进入 TTY 虚拟控制台</h3><p>你的图形登录界面正运行在第一个虚拟控制台（TTY1）上。我们需要切换到一个空闲的字符模式控制台（TTY2）。</p><p>在键盘上按下组合键：<br><strong>Ctrl + Alt + F2</strong></p><p>按下后，你的屏幕会从漂亮的图形界面切换到一个纯黑色的、只有文字的界面，并显示一个登录提示符，类似这样：<br><code>ArchLinux login:</code></p><blockquote><p>如果 F2 没有反应，可以试试 Ctrl + Alt + F3 或 F4、F5、F6。</p></blockquote><h3 id="3-2-第二步：以-root-用户登录"><a href="#3-2-第二步：以-root-用户登录" class="headerlink" title="3.2. 第二步：以 root 用户登录"></a>3.2. 第二步：以 root 用户登录</h3><p>在这个黑色的字符界面中，你<strong>可以</strong>用 root 用户登录。</p><ol><li>在 <code>login:</code> 提示符后，输入 <code>root</code>，然后按回车。</li><li>在 <code>Password:</code> 提示符后，输入你的 root 用户密码，然后按回车。（注意：输入密码时屏幕上不会有任何显示，这是正常的安全措施）。</li></ol><p>成功登录后，你会看到 <code>[root@ArchLinux ~]#</code> 这样的提示符。</p><h3 id="3-3-第三步：创建你的普通用户"><a href="#3-3-第三步：创建你的普通用户" class="headerlink" title="3.3. 第三步：创建你的普通用户"></a>3.3. 第三步：创建你的普通用户</h3><p>现在我们来创建你的日常使用的账户。假设你想创建的用户名叫 <code>myuser</code>（你可以换成任何你喜欢的名字）。</p><p>在终端中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel -s /bin/bash myuser</span><br></pre></td></tr></table></figure><p><strong>命令解释：</strong></p><ul><li><code>useradd</code>：创建用户的命令。</li><li><code>-m</code>：<strong>非常重要</strong>，它会自动为新用户创建家目录（&#x2F;home&#x2F;myuser）。</li><li><code>-G wheel</code>：将用户添加到一个名为 <code>wheel</code> 的用户组。在 Arch Linux 中，这个组的成员默认可以获得管理员权限（通过 <code>sudo</code>）。</li><li><code>-s /bin/bash</code>：设置用户的默认 Shell 为 bash，这是最常用的 Shell。</li><li><code>myuser</code>：你新用户的名字。</li></ul><h3 id="3-4-第四步：为新用户设置密码"><a href="#3-4-第四步：为新用户设置密码" class="headerlink" title="3.4. 第四步：为新用户设置密码"></a>3.4. 第四步：为新用户设置密码</h3><p>新创建的用户还没有密码，无法登录。执行以下命令来设置密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd myuser</span><br></pre></td></tr></table></figure><p>系统会提示你输入两次新密码来确认。同样，输入时屏幕上不会有显示。</p><h3 id="3-5-第五步：配置-sudo-权限"><a href="#3-5-第五步：配置-sudo-权限" class="headerlink" title="3.5. 第五步：配置 sudo 权限"></a>3.5. 第五步：配置 <code>sudo</code> 权限</h3><p>为了让你的新用户能够执行管理员命令（比如安装软件），我们需要允许 <code>wheel</code> 组的用户使用 <code>sudo</code> 命令。</p><ol><li><p>执行以下命令来安全地编辑 <code>sudo</code> 的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br></pre></td></tr></table></figure><p>这个命令会使用默认的文本编辑器（通常是 <code>vi</code>）打开一个临时文件。<strong>请务必使用 <code>visudo</code></strong>，因为它会在保存时检查语法，防止你把自己锁在系统外面。</p></li><li><p>如果当您尝试执行 <code>visudo</code> 命令时，系统返回了错误：<br><strong>-bash: visudo: command not found</strong><br><strong>当前状态</strong>：您已经通过 <code>Ctrl + Alt + F2</code> 进入了字符终端 (TTY)，并以 <code>root</code> 用户身份登录。您成功创建了一个新用户，但在尝试赋予其管理员权限时，遇到了 <code>visudo: command not found</code> 错误。</p></li></ol><h4 id="根本原因"><a href="#根本原因" class="headerlink" title="根本原因"></a><strong>根本原因</strong></h4><p>这个错误的核心原因有两个：</p><ol><li><strong><code>sudo</code> 未安装</strong>：Arch Linux 的基础系统默认不包含 <code>sudo</code> 软件包。<code>visudo</code> 命令是 <code>sudo</code> 包的一部分，因此必须先安装它。</li><li><strong>文本编辑器缺失</strong>：Arch Linux 的基础系统也可能没有预装任何文本编辑器（如 <code>nano</code> 或 <code>vi</code>）。<code>visudo</code> 需要调用一个编辑器来修改文件，如果找不到，它也无法工作。</li></ol><p>我们将一步到位解决这两个问题。</p><hr><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h3><h4 id="第一步：安装必要的软件包-sudo-和-nano"><a href="#第一步：安装必要的软件包-sudo-和-nano" class="headerlink" title="第一步：安装必要的软件包 (sudo 和 nano)"></a><strong>第一步：安装必要的软件包 (<code>sudo</code> 和 <code>nano</code>)</strong></h4><p>我们需要安装 <code>sudo</code> 来获得 <code>visudo</code> 命令，同时安装 <code>nano</code> 作为一个对新手友好的文本编辑器。</p><p>在您当前的 <code>root</code> 终端中，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S <span class="built_in">sudo</span> nano</span><br></pre></td></tr></table></figure><ul><li><code>pacman -S</code> 是安装软件包的命令。</li><li><code>sudo nano</code> 表示我们同时安装 <code>sudo</code> 和 <code>nano</code> 这两个包。</li><li>系统可能会提示您确认安装，按 <code>Y</code> 然后回车即可。</li></ul><h4 id="第二步：配置-sudo-权限"><a href="#第二步：配置-sudo-权限" class="headerlink" title="第二步：配置 sudo 权限"></a><strong>第二步：配置 <code>sudo</code> 权限</strong></h4><p>现在我们有了所有工具，可以安全地为新用户配置 <code>sudo</code> 权限了。</p><ol><li><p>执行以下命令，使用我们刚刚安装的 <code>nano</code> 编辑器来运行 <code>visudo</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EDITOR=nano visudo</span><br></pre></td></tr></table></figure><p>这个命令会用 <code>nano</code> 打开 <code>sudo</code> 的配置文件。</p></li><li><p>在打开的 <code>nano</code> 编辑器界面中，使用键盘的<strong>下方向键</strong>，找到下面这一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># %wheel ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>将光标移动到行首，按<strong>删除键 (Backspace 或 Delete)</strong>，把井号 (#) 和它后面的空格删掉，使该行变为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure><blockquote><p><strong>操作解读</strong>：这步操作的作用是“取消注释”，即启用这条规则，允许所有在 <code>wheel</code> 用户组里的成员使用 <code>sudo</code> 命令。您在创建用户时使用的 <code>-G wheel</code> 参数，就是为了这一步做准备。</p></blockquote></li><li><p>保存并退出 <code>nano</code> 编辑器：</p><ul><li>首先，按下键盘上的 <strong>Ctrl + X</strong> 组合键。</li><li>屏幕底部会询问 <code>Save modified buffer?</code> (是否保存修改？)，按下 <strong>Y</strong> 键 (代表 Yes)。</li><li>最后，屏幕会显示要保存的文件名，此时直接按下 <strong>Enter</strong> 键确认即可。</li></ul></li></ol><h4 id="第三步：为新用户设置密码（关键步骤）"><a href="#第三步：为新用户设置密码（关键步骤）" class="headerlink" title="第三步：为新用户设置密码（关键步骤）"></a><strong>第三步：为新用户设置密码（关键步骤）</strong></h4><p>您的新用户 <code>liusonglei</code> 还没有密码，无法登录。现在为他设置一个。</p><ol><li><p>执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd liusonglei</span><br></pre></td></tr></table></figure></li><li><p>根据提示，输入您想为 <code>liusonglei</code> 设置的新密码，然后按回车。</p></li><li><p>系统会要求您再次输入同一个密码进行确认，输入后再次按回车。</p><blockquote><p><strong>注意</strong>：输入密码时，为了安全，屏幕上不会显示任何字符或星号。这是正常现象，请放心输入。</p></blockquote></li></ol><h4 id="第四步安装能提升虚拟机体验的辅助工具"><a href="#第四步安装能提升虚拟机体验的辅助工具" class="headerlink" title="第四步安装能提升虚拟机体验的辅助工具"></a>第四步安装能提升虚拟机体验的辅助工具</h4><p>配置完新用户后接着</p><h4 id="第一步：安装-VMware-增强工具（强烈推荐）"><a href="#第一步：安装-VMware-增强工具（强烈推荐）" class="headerlink" title="第一步：安装 VMware 增强工具（强烈推荐）"></a><strong>第一步：安装 VMware 增强工具（强烈推荐）</strong></h4><p>这个工具能让您的虚拟机体验更好（如自动调整分辨率、鼠标无缝切换、文件拖放等）。</p><p>在您当前的 <code>liusonglei</code> 用户终端中，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S open-vm-tools</span><br></pre></td></tr></table></figure><blockquote><p>如果系统提示 <code>open-vm-tools</code> 已经安装，那也没关系。</p></blockquote><p>安装完成后，执行以下命令来启动并设置其开机自启。我们可以用一个更高效的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> --now vmtoolsd.service</span><br></pre></td></tr></table></figure><p><code>enable --now</code> 会同时完成“设置为开机自启”和“立即启动”两个操作。</p><p>然后安装kconsole</p><h4 id="安装-Konsole-软件包"><a href="#安装-Konsole-软件包" class="headerlink" title="安装 Konsole 软件包"></a><strong>安装 Konsole 软件包</strong></h4><p>现在，我们使用 <code>sudo</code> 命令来安装 Konsole。在终端中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S konsole</span><br></pre></td></tr></table></figure><ol><li>系统会要求您输入 <code>liusonglei</code> 的密码来确认管理员权限。</li><li><code>pacman</code> 会找到 <code>konsole</code> 软件包并提示您是否安装。按 <code>Y</code> 然后回车。</li><li>等待安装完成。</li></ol><h4 id="第二步：重启系统（最后一步！）"><a href="#第二步：重启系统（最后一步！）" class="headerlink" title="第二步：重启系统（最后一步！）"></a><strong>第二步：重启系统（最后一步！）</strong></h4><p>所有必要的组件现在都已就位。让我们进行这决定性的一次重启。</p><p>在终端中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="迎接成功"><a href="#迎接成功" class="headerlink" title="迎接成功"></a><strong>迎接成功</strong></h3><p>这一次，当您的虚拟机重启后，它拥有了：</p><ol><li>一个可以登录的普通用户 (liusonglei)。</li><li>正确的 <code>sudo</code> 权限。</li><li>已经就位的核心图形驱动 (mesa)。</li><li>提升体验的 VMware 增强工具。</li></ol><hr><h2 id="4-美化步骤"><a href="#4-美化步骤" class="headerlink" title="4. 美化步骤"></a>4. 美化步骤</h2><h3 id="4-1-准备工作：打好地基"><a href="#4-1-准备工作：打好地基" class="headerlink" title="4.1. 准备工作：打好地基"></a>4.1. 准备工作：打好地基</h3><p>在开始美化之前，我们需要确保系统具备编译和安装 AUR 软件包的能力。AUR（Arch User Repository）是 Arch 用户社区维护的软件仓库，我们将从中获取主题。</p><ol><li><p><strong>安装基础开发工具和 Git</strong><br>如果尚未安装，请打开终端（Konsole）并执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S --needed base-devel git</span><br></pre></td></tr></table></figure></li><li><p><strong>安装一个 AUR 助手（推荐）</strong>  这一步最好科学上网<br>AUR 助手（如 <code>yay</code> 或 <code>paru</code>）可以极大简化 AUR 软件包的安装和更新过程。这里以 <code>yay</code> 为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 yay 的源代码</span></span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line"><span class="comment"># 进入目录并编译安装</span></span><br><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>安装完成后，你就可以使用 <code>yay</code> 命令来像 <code>pacman</code> 一样安装 AUR 包了。</p><p>如果不科学上网的方法我没试过这里贴一下<br>您所在的网络环境可能无法直接访问 Google 的服务，包括 <code>proxy.golang.org</code>。这在中国大陆地区非常普遍，但在其他地区也可能因为本地网络策略、防火墙或DNS问题而发生。</p></li></ol><ul><li><p><strong>解决方案：设置 Go 代理 (GOPROXY)</strong></p><p>您可以将 Go 模块代理设置为一个在中国大陆可以访问的镜像源。执行以下命令来设置环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">env</span> -w GO111MODULE=on</span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><p>或者，您也可以使用其他可靠的代理，例如：</p><ul><li><code>https://goproxy.io,direct</code></li><li><code>https://proxy.golang.com.cn,direct</code></li></ul><p><strong>操作步骤：</strong></p><ol><li>打开您的终端。</li><li>复制并粘贴上面的 <code>go env -w</code> 命令并执行。</li><li>这个设置是永久性的。设置完成后，请<strong>重新运行</strong>您之前的 <code>yay</code> 命令，看看是否能成功编译。</li></ol></li></ul><hr><h3 id="4-2-第一步：安装核心主题引擎-Kvantum"><a href="#4-2-第一步：安装核心主题引擎-Kvantum" class="headerlink" title="4.2. 第一步：安装核心主题引擎 (Kvantum)"></a>4.2. 第一步：安装核心主题引擎 (Kvantum)</h3><p>KDE Plasma 的许多高级主题，包括 WhiteSur，都依赖 Kvantum 这个 SVG 主题引擎来实现复杂的视觉效果（如果冻玻璃、圆角等）。</p><blockquote><p><strong>操作解读</strong>：Kvantum 扮演着一个“翻译官”的角色，它让 Qt 应用程序能够理解并渲染基于 SVG 图像的复杂主题，而 WhiteSur 正是这类主题。</p></blockquote><p>在终端中执行以下命令来安装 Kvantum：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S kvantum</span><br></pre></td></tr></table></figure><p>(注：现在的 <code>kvantum</code> 包通常同时支持 Qt5 和 Qt6)</p><hr><h3 id="4-3-第二步：安装-WhiteSur-主题系列"><a href="#4-3-第二步：安装-WhiteSur-主题系列" class="headerlink" title="4.3. 第二步：安装 WhiteSur 主题系列"></a>4.3. 第二步：安装 WhiteSur 主题系列</h3><p>现在，我们使用 AUR 助手 <code>yay</code> 来一键安装 WhiteSur 的所有组件。</p><ol><li><p><strong>安装 GTK、KDE 和图标主题</strong><br>在终端中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S whitesur-gtk-theme whitesur-icon-theme whitesur-kde-theme</span><br></pre></td></tr></table></figure><blockquote><p><strong>操作解读</strong>：</p><ul><li><code>whitesur-gtk-theme</code>：这是给 GTK 应用（如 GIMP, Inkscape, Firefox）使用的 macOS 风格主题。</li><li><code>whitesur-icon-theme</code>：这是 macOS Big Sur 风格的图标集。</li><li><code>whitesur-kde-theme</code>：这是给 KDE Plasma 自身（如窗口装饰、面板、颜色方案）和 Kvantum 使用的主题。</li></ul></blockquote></li><li><p><strong>（可选）安装 WhiteSur 光标主题</strong>  需要科学上网<br>为了达到最完整的统一效果，我们还可以安装配套的鼠标光标主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S whitesur-cursor-theme</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 分类名称 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux 虚拟机安装指南</title>
      <link href="/2025/01/13/Arch%20Linux%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
      <url>/2025/01/13/Arch%20Linux%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>本指南将详细引导您在虚拟机中完成 Arch Linux 的安装与配置，并完整保留了操作过程中的详细步骤与说明。</p><hr><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="步骤-1：下载-Arch-Linux-ISO-镜像"><a href="#步骤-1：下载-Arch-Linux-ISO-镜像" class="headerlink" title="步骤 1：下载 Arch Linux ISO 镜像"></a>步骤 1：下载 Arch Linux ISO 镜像</h3><p>首先，您需要从官方网站获取 Arch Linux 的安装镜像 (ISO 文件)。这是最安全可靠的来源。</p><ul><li><strong>官方下载页面：</strong> <a href="https://archlinux.org/download/">https://archlinux.org/download/</a></li></ul><blockquote><p><strong>如何选择下载链接？</strong><br>在下载页面，向下滚动找到 <strong>“HTTP Direct Downloads”</strong> 部分。这里列出了全球各地的镜像服务器。为获得最佳下载速度，建议中国大陆用户选择 “China” 分类下的镜像站点，例如：</p><ul><li><strong>清华大学开源软件镜像站:</strong> <code>https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/</code></li><li><strong>中国科学技术大学开源软件镜像站:</strong> <code>https://mirrors.ustc.edu.cn/archlinux/iso/latest/</code></li></ul><p>进入镜像站点后，点击以 <code>.iso</code> 结尾的最新文件（如 <code>archlinux-2025.08.01-x86_64.iso</code>）即可开始下载。</p></blockquote><h3 id="步骤-2：配置虚拟机"><a href="#步骤-2：配置虚拟机" class="headerlink" title="步骤 2：配置虚拟机"></a>步骤 2：配置虚拟机</h3><p>在您的虚拟化软件（如 VMware, VirtualBox）中创建一个新的虚拟机。以下是关键配置步骤的图文说明。</p><ul><li><p><strong>操作系统类型与命名</strong><br><img src="/img/PixPin_2025-08-13_15-55-50.png" alt="操作系统类型选择"><br><img src="/img/PixPin_2025-08-13_15-56-18.png" alt="虚拟机命名"></p></li><li><p><strong>处理器与内存</strong></p><blockquote><p>分配的核心总数<strong>不要超过</strong>您电脑的逻辑处理器上限。内存建议分配 <strong>4GB 或以上</strong>。<br><img src="/img/PixPin_2025-08-13_15-57-14.png" alt="处理器配置"><br><img src="/img/PixPin_2025-08-13_15-59-43.png" alt="内存配置"><br><img src="/img/PixPin_2025-08-13_16-54-27.png" alt="虚拟机设置"></p></blockquote></li><li><p><strong>硬盘</strong></p><blockquote><p>选择“创建新的虚拟磁盘”，建议容量为 <strong>50GB 或以上</strong>。<br><img src="/img/PixPin_2025-08-13_16-01-47.png" alt="硬盘配置"><br>因为我们是新建的虚拟机，所以选择创建新磁盘，而不是使用现有磁盘。<br><img src="/img/PixPin_2025-08-13_16-02-14.png" alt="创建新磁盘"><br><img src="/img/PixPin_2025-08-13_16-03-25.png" alt="磁盘容量设置"></p></blockquote></li><li><p><strong>完成创建</strong></p><blockquote><p>后续步骤若无特殊需求，保持默认推荐选项即可。<br><img src="/img/PixPin_2025-08-13_16-04-21.png" alt="完成虚拟机创建"><br><img src="/img/PixPin_2025-08-13_16-05-42.png" alt="虚拟机创建完成"></p></blockquote></li><li><p><strong>加载ISO并启动</strong></p><blockquote><p>在虚拟机设置中，将下载好的 Arch Linux ISO 文件加载到虚拟光驱中，然后启动虚拟机。<br><img src="/img/PixPin_2025-08-13_18-15-07.png" alt="加载ISO文件"></p></blockquote></li></ul><blockquote><p><strong>注意：</strong> 启动时如果出现如下提示，点击“否”即可。<br><img src="/img/PixPin_2025-08-13_16-59-37.png" alt="启动提示"></p></blockquote><p>完成以上设置后，启动虚拟机。</p><hr><h2 id="二、系统安装"><a href="#二、系统安装" class="headerlink" title="二、系统安装"></a>二、系统安装</h2><h3 id="步骤-1：启动进入安装环境"><a href="#步骤-1：启动进入安装环境" class="headerlink" title="步骤 1：启动进入安装环境"></a>步骤 1：启动进入安装环境</h3><p>启动虚拟机后，会看到一个启动菜单。选择第一个选项 <code>Arch Linux install medium</code>，系统将自动加载并进入一个临时的命令行安装环境。</p><p><img src="/img/PixPin_2025-08-13_16-19-47.png" alt="Arch Linux 启动菜单"></p><h3 id="步骤-2：验证网络连接"><a href="#步骤-2：验证网络连接" class="headerlink" title="步骤 2：验证网络连接"></a>步骤 2：验证网络连接</h3><p>Arch Linux 的安装过程需要网络连接。在虚拟机中，网络通常会自动配置好。您可以通过 <code>ping</code> 命令来测试网络连通性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping archlinux.org</span><br></pre></td></tr></table></figure><blockquote><p>如果能收到来自服务器的回复 (reply)，则说明网络正常。按 <code>Ctrl+C</code> 可以停止 <code>ping</code> 命令。</p></blockquote><h3 id="步骤-3：磁盘分区-cfdisk"><a href="#步骤-3：磁盘分区-cfdisk" class="headerlink" title="步骤 3：磁盘分区 (cfdisk)"></a>步骤 3：磁盘分区 (<code>cfdisk</code>)</h3><p>这是整个安装过程中最关键也最容易出错的一步。我们将使用 <code>cfdisk</code> 这个相对友好的工具来为虚拟硬盘分区。</p><p>在终端中输入以下命令启动分区工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/sda</span><br></pre></td></tr></table></figure><h4 id="3-1-选择分区表类型"><a href="#3-1-选择分区表类型" class="headerlink" title="3.1 选择分区表类型"></a>3.1 选择分区表类型</h4><blockquote><p><code>cfdisk</code> 首先会要求您选择分区表类型。对于现代计算机和UEFI启动，<strong><code>gpt</code> 是唯一正确的选择</strong>。直接按回车键确认即可。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-14-09.png" alt="选择分区表类型"></p><h4 id="3-2-创建分区"><a href="#3-2-创建分区" class="headerlink" title="3.2 创建分区"></a>3.2 创建分区</h4><blockquote><p>您现在会看到 <code>cfdisk</code> 的主界面。我们将创建两个最核心的分区：一个用于启动 (EFI)，一个用于存放系统 (根分区)。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-15-54.png" alt="cfdisk 主界面"></p><p><strong>第一步：创建 EFI 启动分区</strong></p><p>这个分区是启动系统所必需的。</p><ol><li>确保 <code>&gt;&gt; Free space</code> (空闲空间) 这一行被选中（它默认就是选中的）。</li><li>在键盘上，使用左右箭头键移动到屏幕下方的 <strong><code>[ New ]</code></strong> 选项上，然后按 <strong>回车 (Enter)</strong> 键。</li><li>它会提示您输入分区大小 <code>Partition size</code>。请输入 <code>512M</code> 然后按 <strong>回车</strong>。（512MB 对于启动分区来说绰绰有余）。</li><li>创建后，您会看到一个新的分区 <code>/dev/sda1</code>。现在需要把它标记为启动分区。确保 <code>/dev/sda1</code> 这一行被选中，然后移动到下方的 <strong><code>[ Type ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>在弹出的类型列表中，使用上下箭头键找到并选中 <strong><code>EFI System</code></strong>，然后按 <strong>回车</strong>。</li></ol><blockquote><p>做完这一步，您的屏幕看起来应该像这样： <code>Device Size Type</code> <code>/dev/sda1 512M EFI System</code></p></blockquote><p><strong>第二步：创建根 (Root) 分区</strong></p><p>这个分区用来存放整个操作系统。</p><ol><li>使用向下箭头键，选中剩下的那一行 <code>Free space</code> (大约 49.5G)。</li><li>和刚才一样，移动到下方的 <strong><code>[ New ]</code></strong> 并按 <strong>回车</strong>。</li><li>它会再次提示输入分区大小。这次我们想用掉所有剩余空间，所以<strong>直接按回车</strong>即可，不需要输入任何数字。</li><li>创建后，您会看到第二个分区 <code>/dev/sda2</code>。它的默认类型 <code>Linux filesystem</code> 就是我们想要的，<strong>无需更改</strong>。</li></ol><p><strong>第三步：保存并写入更改 (最关键!)</strong></p><p>到目前为止，所有的操作都还只是预演。必须执行“写入”操作才会真正生效。</p><ol><li>移动到屏幕下方的 <strong><code>[ Write ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>它会用英文警告您，这个操作会把分区表写入磁盘。它会问 <code>Are you sure you want to write the partition table to disk?</code> (您确定要把分区表写入磁盘吗？)。</li><li><strong>输入 <code>yes</code></strong> 然后按 <strong>回车</strong> 确认。</li></ol><p><img src="/img/PixPin_2025-08-13_16-17-29.png" alt="写入分区表确认"></p><blockquote><p>当您完成以上所有步骤后，您的分区方案如下：</p><table><thead><tr><th>分区 (设备)</th><th>大小 (Size)</th><th>类型 (Type)</th><th>用途</th></tr></thead><tbody><tr><td><code>/dev/sda1</code></td><td>512M</td><td>EFI System</td><td><strong>启动分区</strong> (存放引导程序)</td></tr><tr><td><code>/dev/sda2</code></td><td>约 49.5G</td><td>Linux 文件系统</td><td><strong>根分区</strong> (存放操作系统)</td></tr></tbody></table></blockquote><p><strong>第四步：退出分区工具</strong></p><ol><li>移动到屏幕下方的 <strong><code>[ Quit ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>您将会退出 <code>cfdisk</code> 工具，并返回到黑色的命令行界面。</li></ol><h3 id="步骤-4：格式化分区和挂载"><a href="#步骤-4：格式化分区和挂载" class="headerlink" title="步骤 4：格式化分区和挂载"></a>步骤 4：格式化分区和挂载</h3><p>分区完成后，需要对它们进行格式化，然后挂载到指定目录。</p><ul><li><p><strong>格式化 EFI 分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F32 /dev/sda1</span><br></pre></td></tr></table></figure></li><li><p><strong>格式化根分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda2</span><br></pre></td></tr></table></figure><blockquote><p><strong>关于交换空间 (Swap) 怎么办？</strong><br>您不用担心。我们可以在系统安装完成之后，在根分区里创建一个<code>swapfile</code>（交换文件），这是比创建独立 <code>swap</code> 分区更现代、更灵活的方式。<strong>现在请先不要处理 swap 的问题。</strong></p></blockquote></li></ul><p>接下来，开始挂载。</p><p><strong>第一步：挂载根分区</strong></p><blockquote><p>这个命令告诉系统，<code>/mnt</code> 目录就是我们即将安装的 Arch Linux 的根目录 (<code>/</code>)。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda2 /mnt</span><br></pre></td></tr></table></figure><blockquote><p>（执行这条命令后，如果没报错，就说明成功了）</p></blockquote><p><strong>第二步：创建启动挂载点</strong></p><blockquote><p>在刚刚挂载好的根目录里，创建一个叫 <code>boot</code> 的文件夹。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/boot</span><br></pre></td></tr></table></figure><p><strong>第三步：挂载 EFI 启动分区</strong></p><blockquote><p>将您的 EFI 启动分区 (<code>/dev/sda1</code>) 挂载到刚刚创建的 <code>/mnt/boot</code> 目录上。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure><p><strong>第四步：检查挂载状态</strong></p><blockquote><p>当您完成以上<strong>全部三步</strong>操作后，可以输入以下命令来检查挂载状态：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><blockquote><p>您应该会看到类似下面的输出，<code>sda1</code> 和 <code>sda2</code> 都有了对应的 <code>MOUNTPOINT</code> (挂载点)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS</span><br><span class="line">sda      8:0    0   50G  0 disk</span><br><span class="line">├─sda1   8:1    0  512M  0 part /mnt/boot</span><br><span class="line">└─sda2   8:2    0 49.5G  0 part /mnt</span><br></pre></td></tr></table></figure><p>如果您的输出和这个结构类似，就说明挂载圆满成功，您可以进行下一步了。</p></blockquote><h3 id="步骤-5：更新镜像列表（可选但推荐）"><a href="#步骤-5：更新镜像列表（可选但推荐）" class="headerlink" title="步骤 5：更新镜像列表（可选但推荐）"></a>步骤 5：更新镜像列表（可选但推荐）</h3><p>为了在安装基本系统时获得更快的下载速度，建议先更新软件源镜像列表，优先使用国内的服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reflector --verbose --country China --age 12 --protocol https --<span class="built_in">sort</span> rate --latest 6 --save /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h3 id="步骤-6：安装基本系统-pacstrap"><a href="#步骤-6：安装基本系统-pacstrap" class="headerlink" title="步骤 6：安装基本系统 (pacstrap)"></a>步骤 6：安装基本系统 (<code>pacstrap</code>)</h3><p>现在，我们使用 <code>pacstrap</code> 命令将 Arch Linux 的核心软件包安装到刚刚挂载好的根分区 (<code>/mnt</code>) 中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap -K /mnt base linux linux-firmware</span><br></pre></td></tr></table></figure><blockquote><p><strong>关于安装过程中的警告信息：</strong><br>您可能会在屏幕上看到许多黄色的 <code>WARNING: Possibly missing firmware for module: ...</code> 信息。</p><ul><li><strong>这是什么？</strong> 这是因为 <code>linux-firmware</code> 包包含了海量硬件的固件，而安装程序检测到您的虚拟机环境并不需要其中大部分（例如服务器专用网卡的固件）。</li><li><strong>需要处理吗？</strong> <strong>完全不需要。</strong> 这些警告是正常现象，可以安全地忽略，对您的系统没有任何影响。</li></ul></blockquote><hr><h2 id="三、系统配置"><a href="#三、系统配置" class="headerlink" title="三、系统配置"></a>三、系统配置</h2><h3 id="步骤-1：进入新系统-arch-chroot"><a href="#步骤-1：进入新系统-arch-chroot" class="headerlink" title="步骤 1：进入新系统 (arch-chroot)"></a>步骤 1：进入新系统 (<code>arch-chroot</code>)</h3><p>安装完基本系统后，我们需要进入到这个新系统中进行配置。<code>arch-chroot</code> 命令可以让我们仿佛“登录”到 <code>/mnt</code> 目录下的新系统里。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><blockquote><p><strong>关键变化：</strong> 执行此命令后，您会发现命令提示符从 <code>root@archiso ~ #</code> 变成了 <code>[root@archiso /]#</code>。这个变化标志着您已经成功进入了硬盘上的新系统。从现在起，所有命令都将直接作用于您的系统。</p></blockquote><h3 id="步骤-2：设置时区"><a href="#步骤-2：设置时区" class="headerlink" title="步骤 2：设置时区"></a>步骤 2：设置时区</h3><p>将系统时区设置为上海，并同步硬件时钟。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="步骤-3：本地化-Localization"><a href="#步骤-3：本地化-Localization" class="headerlink" title="步骤 3：本地化 (Localization)"></a>步骤 3：本地化 (Localization)</h3><p>此步骤用于配置系统的语言和字符集。</p><ol><li><p><strong>安装文本编辑器:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S nano</span><br></pre></td></tr></table></figure></li><li><p><strong>编辑 <code>/etc/locale.gen</code> 文件:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br></pre></td></tr></table></figure><blockquote><p>在 <code>nano</code> 编辑器中，您需要找到并取消注释（即删除行首的 <code>#</code>）以下两行：</p><ul><li><code>en_US.UTF-8 UTF-8</code></li><li><code>zh_CN.UTF-8 UTF-8</code></li></ul><p><strong>Nano 操作技巧：</strong></p><ul><li>使用 <code>Ctrl + W</code> 搜索关键字（如 <code>en_US.UTF-8</code>）。</li><li>使用方向键和退格键删除 <code>#</code>。</li><li>完成后，按 <code>Ctrl + X</code> 退出，程序会提示是否保存，按 <code>Y</code> 确认，然后按回车键确认文件名。</li></ul></blockquote></li><li><p><strong>生成 Locale:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure></li><li><p><strong>创建 <code>locale.conf</code> 文件:</strong><br>此文件用于设定系统的默认语言。这里我们设为美式英语。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LANG=en_US.UTF-8&quot;</span> &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-4：设置主机名"><a href="#步骤-4：设置主机名" class="headerlink" title="步骤 4：设置主机名"></a>步骤 4：设置主机名</h3><p>主机名是您的计算机在网络中的名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;my-arch-vm&quot;</span> &gt; /etc/hostname</span><br></pre></td></tr></table></figure><blockquote><p>您可以将 <code>my-arch-vm</code> 替换为您喜欢的任何名字。</p></blockquote><h3 id="步骤-5：设置-Root-用户密码"><a href="#步骤-5：设置-Root-用户密码" class="headerlink" title="步骤 5：设置 Root 用户密码"></a>步骤 5：设置 Root 用户密码</h3><p><code>root</code> 是系统的超级管理员用户，必须为其设置一个安全的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><blockquote><p>按照提示，输入两次新密码。注意，输入时屏幕不会有任何显示，这是正常的安全机制。</p></blockquote><h3 id="步骤-6：安装并配置引导加载程序-GRUB"><a href="#步骤-6：安装并配置引导加载程序-GRUB" class="headerlink" title="步骤 6：安装并配置引导加载程序 (GRUB)"></a>步骤 6：安装并配置引导加载程序 (GRUB)</h3><p>引导加载程序（Bootloader）是开机时第一个运行的软件，负责加载操作系统。</p><ol><li><strong>安装 GRUB 和相关工具:</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr</span><br></pre></td></tr></table></figure></li><li><strong>部署 GRUB 到 EFI 分区:</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB</span><br></pre></td></tr></table></figure></li><li><strong>生成 GRUB 配置文件:</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="四、完成安装与首次启动"><a href="#四、完成安装与首次启动" class="headerlink" title="四、完成安装与首次启动"></a>四、完成安装与首次启动</h2><h3 id="步骤-1：退出-Chroot-环境并关机"><a href="#步骤-1：退出-Chroot-环境并关机" class="headerlink" title="步骤 1：退出 Chroot 环境并关机"></a>步骤 1：退出 Chroot 环境并关机</h3><p>所有配置已完成。现在可以安全地退出并关机了。</p><ol><li><p><strong>退出 Chroot:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>此时，命令提示符会恢复为 <code>root@archiso ~ #</code>。</p></blockquote></li><li><p><strong>卸载分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -R /mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>关机:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown now</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-2：移除-ISO-并重启"><a href="#步骤-2：移除-ISO-并重启" class="headerlink" title="步骤 2：移除 ISO 并重启"></a>步骤 2：移除 ISO 并重启</h3><p>在虚拟机完全关机后，<strong>务必在虚拟机设置中移除或断开 ISO 镜像文件</strong>，否则下次开机又会进入安装环境。</p><p>完成此操作后，重新启动虚拟机。</p><h3 id="步骤-3：登录新系统"><a href="#步骤-3：登录新系统" class="headerlink" title="步骤 3：登录新系统"></a>步骤 3：登录新系统</h3><p>如果一切顺利，您将看到黑色的命令行登录界面。</p><ol><li><strong>输入用户名:</strong> 在 <code>login:</code> 提示符后，输入 <code>root</code>，按回车。</li><li><strong>输入密码:</strong> 输入您之前为 <code>root</code> 用户设置的密码，按回车。</li></ol><p>成功登录后，您将看到 <code>[root@my-arch-vm ~]#</code> 这样的命令提示符。</p><p><strong>恭喜！您已成功安装并登录了您亲手打造的 Arch Linux 系统。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arch Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux安装 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
