<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>暂停Windows 更新</title>
      <link href="/2025/09/14/%E6%96%B0%E6%96%87%E7%AB%A0/"/>
      <url>/2025/09/14/%E6%96%B0%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="如何彻底关闭Windows系统自动更新（可暂停超长期限）"><a href="#如何彻底关闭Windows系统自动更新（可暂停超长期限）" class="headerlink" title="如何彻底关闭Windows系统自动更新（可暂停超长期限）"></a>如何彻底关闭Windows系统自动更新（可暂停超长期限）</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文介绍通过修改注册表项 <code>FlightSettingsMaxpauseDays</code> 并结合系统设置，突破Windows默认35天更新暂停限制，实现长期关闭系统自动更新的方法。</p><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Windows系统的自动更新功能虽能保障安全性，但在网络不稳定、担心兼容性等问题时，你可能希望<strong>长期暂停更新</strong>。然而，Windows默认“暂停更新”仅支持最长35天，无法满足需求。本教程将通过<strong>注册表修改 + 系统设置</strong>组合方案，实现“理论可暂停数十年”的效果。</p><h2 id="二、核心逻辑"><a href="#二、核心逻辑" class="headerlink" title="二、核心逻辑"></a>二、核心逻辑</h2><p>Windows更新的暂停时长由注册表项 <code>FlightSettingsMaxpauseDays</code> 控制，该值决定“允许暂停的最大天数”。通过修改此值并配合系统设置，可突破默认35天的限制。</p><h2 id="三、详细操作步骤"><a href="#三、详细操作步骤" class="headerlink" title="三、详细操作步骤"></a>三、详细操作步骤</h2><h3 id="🔧-步骤1：通过注册表扩展暂停更新上限"><a href="#🔧-步骤1：通过注册表扩展暂停更新上限" class="headerlink" title="🔧 步骤1：通过注册表扩展暂停更新上限"></a>🔧 步骤1：通过注册表扩展暂停更新上限</h3><h4 id="操作前提"><a href="#操作前提" class="headerlink" title="操作前提"></a>操作前提</h4><ul><li>管理员权限</li><li>系统为 Windows 10 或更新版本</li></ul><h4 id="1-打开「注册表编辑器」"><a href="#1-打开「注册表编辑器」" class="headerlink" title="1. 打开「注册表编辑器」"></a>1. 打开「注册表编辑器」</h4><ul><li>按 <code>Win + R</code> 打开「运行」对话框，输入 <code>regedit</code> 并回车，启动注册表编辑器。</li></ul><h4 id="2-定位目标注册表路径"><a href="#2-定位目标注册表路径" class="headerlink" title="2. 定位目标注册表路径"></a>2. 定位目标注册表路径</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings</span><br></pre></td></tr></table></figure><p>（若路径不存在，可手动创建）</p><h4 id="3-新建并配置-DWORD-值"><a href="#3-新建并配置-DWORD-值" class="headerlink" title="3. 新建并配置 DWORD 值"></a>3. 新建并配置 DWORD 值</h4><ul><li>右键点击右侧空白区 → 选择「新建」→「DWORD (32 位) 值」。</li><li>将新键命名为 <strong><code>FlightSettingsMaxpauseDays</code></strong>。</li><li>双击该键，在弹出窗口中：<ul><li>勾选「十进制」；</li><li>在「数值数据」框输入 <strong><code>10000</code></strong>（代表约27年，可自定义，最大值为2147483647天）；</li><li>点击「确定」保存。</li></ul></li></ul><h3 id="🛠️-步骤2：在系统设置中应用暂停更新"><a href="#🛠️-步骤2：在系统设置中应用暂停更新" class="headerlink" title="🛠️ 步骤2：在系统设置中应用暂停更新"></a>🛠️ 步骤2：在系统设置中应用暂停更新</h3><h4 id="操作前提-1"><a href="#操作前提-1" class="headerlink" title="操作前提"></a>操作前提</h4><ul><li>已完成注册表修改</li><li>系统已重启或注册表生效</li></ul><h4 id="1-进入「Windows-更新」设置"><a href="#1-进入「Windows-更新」设置" class="headerlink" title="1. 进入「Windows 更新」设置"></a>1. 进入「Windows 更新」设置</h4><ul><li>点击「开始菜单」→ 搜索「Windows 更新」→ 点击「Windows 更新设置」。</li></ul><h4 id="2-选择暂停时长"><a href="#2-选择暂停时长" class="headerlink" title="2. 选择暂停时长"></a>2. 选择暂停时长</h4><ul><li>在「Windows 更新」页面，找到「更多选项」下的「暂停更新」下拉菜单。</li><li>因注册表已扩容上限，此处可选<strong>远超35天的时长</strong>（如“暂停3650天&#x2F;10年”）。</li><li>选择后，系统会显示「更新已暂停，直到XXXX年XX月XX日为止」，设置生效。</li></ul><h2 id="四、验证是否生效"><a href="#四、验证是否生效" class="headerlink" title="四、验证是否生效"></a>四、验证是否生效</h2><ul><li>打开命令提示符（CMD）</li><li>输入以下命令查看注册表值：</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings&quot; /v FlightSettingsMaxpauseDays</span><br></pre></td></tr></table></figure><ul><li>确认输出值与设置一致</li></ul><h2 id="五、恢复更新"><a href="#五、恢复更新" class="headerlink" title="五、恢复更新"></a>五、恢复更新</h2><ol><li>打开「Windows 更新」设置</li><li>点击右上角「继续更新」按钮</li><li>可选择删除注册表项 <code>FlightSettingsMaxpauseDays</code> 或将其值改回 <code>35</code></li></ol><h2 id="六、关键说明"><a href="#六、关键说明" class="headerlink" title="六、关键说明"></a>六、关键说明</h2><ol><li><strong>风险提示 ⚠️</strong>：长期暂停可能遗漏安全补丁，建议定期检查更新。</li><li><strong>适用版本</strong>：适用于 Windows 10及以上版本，其他版本路径&#x2F;键名可能略有差异。</li></ol><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><p>通过注册表修改 <code>FlightSettingsMaxpauseDays</code> 键值，再结合系统暂停选项，可突破Windows默认更新限制，实现长期关闭。此方法操作简单且效果显著，适合需临时或长期控制更新的用户。</p><p>若遇问题，可参考微软官方文档或寻求技术支持~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VSCode远程连接虚拟机完整教程</title>
      <link href="/2025/09/14/new-article/"/>
      <url>/2025/09/14/new-article/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode远程连接虚拟机完整教程"><a href="#VSCode远程连接虚拟机完整教程" class="headerlink" title="VSCode远程连接虚拟机完整教程"></a>VSCode远程连接虚拟机完整教程</h1><p>本文将详细介绍如何使用VSCode的Remote-SSH功能连接到Linux虚拟机，实现远程开发。</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在日常开发中，我们经常需要在远程服务器或虚拟机上进行开发工作。VSCode提供了Remote-SSH扩展，可以让我们直接在本地VSCode中连接远程服务器或虚拟机，享受本地开发的便利性，同时使用远程服务器的计算资源。</p><p>本教程将详细介绍如何在Windows系统上配置SSH密钥，并通过VSCode连接Ubuntu或Arch Linux虚拟机。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始之前，请确保您已完成以下准备工作：</p><ol><li>在本地Windows系统上安装了Visual Studio Code</li><li>拥有一台可访问的Linux虚拟机（Ubuntu或Arch Linux）</li><li>确保本地Windows系统与虚拟机网络互通</li></ol><h2 id="在Linux虚拟机上配置SSH服务"><a href="#在Linux虚拟机上配置SSH服务" class="headerlink" title="在Linux虚拟机上配置SSH服务"></a>在Linux虚拟机上配置SSH服务</h2><p>要使用VSCode远程连接虚拟机，首先需要在虚拟机上配置并启动SSH服务。</p><h3 id="Ubuntu系统配置SSH服务"><a href="#Ubuntu系统配置SSH服务" class="headerlink" title="Ubuntu系统配置SSH服务"></a>Ubuntu系统配置SSH服务</h3><p>Ubuntu是最受欢迎的Linux发行版之一，特别适合初学者。它基于Debian，提供了用户友好的界面和强大的社区支持。</p><p>在Ubuntu上安装和启动SSH服务：</p><ol><li><p>更新软件包列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure></li><li><p>安装OpenSSH服务器软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openssh-server</span><br></pre></td></tr></table></figure></li><li><p>启动SSH服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start ssh</span><br></pre></td></tr></table></figure></li><li><p>设置SSH开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> ssh</span><br></pre></td></tr></table></figure></li><li><p>检查SSH服务状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status ssh</span><br></pre></td></tr></table></figure></li><li><p>配置防火墙允许SSH连接（如果启用了UFW）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw allow ssh</span><br></pre></td></tr></table></figure></li></ol><h3 id="Arch-Linux系统配置SSH服务"><a href="#Arch-Linux系统配置SSH服务" class="headerlink" title="Arch Linux系统配置SSH服务"></a>Arch Linux系统配置SSH服务</h3><p>Arch Linux是一个轻量级且灵活的Linux发行版，采用滚动更新模式。它专为希望完全控制系统的技术用户而设计。</p><p>在Arch Linux上安装和启动SSH服务：</p><ol><li><p>更新系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syu</span><br></pre></td></tr></table></figure></li><li><p>安装OpenSSH软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S openssh</span><br></pre></td></tr></table></figure></li><li><p>启动SSH服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start sshd</span><br></pre></td></tr></table></figure></li><li><p>设置SSH开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure></li><li><p>检查SSH服务状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status sshd</span><br></pre></td></tr></table></figure></li><li><p>配置防火墙允许SSH连接（如果使用ufw）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw allow ssh</span><br></pre></td></tr></table></figure></li></ol><h2 id="在Windows上生成SSH密钥"><a href="#在Windows上生成SSH密钥" class="headerlink" title="在Windows上生成SSH密钥"></a>在Windows上生成SSH密钥</h2><p>现在，我们在Windows电脑上创建一对全新的SSH密钥（公钥和私钥）用于免密登录。</p><ol><li><p>打开命令提示符（CMD）或者 PowerShell。</p></li><li><p>运行ssh-keygen命令来生成密钥。推荐使用ed25519算法，因为它更安全、更高效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><ul><li>您可以将引号中的内容替换成您的邮箱，方便识别密钥。</li><li>当提示 “Enter file in which to save the key…” 时，直接按回车，密钥将保存在默认位置。</li><li>当提示 “Enter passphrase…” 时，为了实现完全的免密登录，<strong>请不要输入任何内容，直接按回车键</strong>。</li></ul></li></ol><p>执行完毕后，在 <code>%USERPROFILE%\.ssh</code> 目录下会生成两个新文件：id_ed25519（私钥）和 id_ed25519.pub（公钥）。</p><h2 id="配置SSH免密登录"><a href="#配置SSH免密登录" class="headerlink" title="配置SSH免密登录"></a>配置SSH免密登录</h2><h3 id="方法一：使用命令自动复制公钥（推荐）"><a href="#方法一：使用命令自动复制公钥（推荐）" class="headerlink" title="方法一：使用命令自动复制公钥（推荐）"></a>方法一：使用命令自动复制公钥（推荐）</h3><p>这是实现免密登录的最简单方法。Windows虽然没有ssh-copy-id命令，但我们可以通过一条命令完成同样的工作。</p><ol><li><p>打开PowerShell（推荐使用PowerShell，功能更强大）</p></li><li><p>执行以下命令，将公钥内容复制到虚拟机的authorized_keys文件中：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> <span class="variable">$env:USERPROFILE</span>\.ssh\id_ed25519.pub | ssh username@your_vm_ip_address <span class="string">&quot;mkdir -p ~/.ssh &amp;&amp; chmod 700 ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys&quot;</span></span><br></pre></td></tr></table></figure><ul><li>请务必将 <code>username</code> 替换成您在虚拟机上的<strong>用户名</strong></li><li>将 <code>your_vm_ip_address</code> 替换成您虚拟机的<strong>IP地址</strong></li><li>执行该命令后，系统会提示您输入一次虚拟机的登录密码，这是为了验证身份并完成公钥的复制</li></ul></li></ol><h3 id="方法二：手动复制公钥"><a href="#方法二：手动复制公钥" class="headerlink" title="方法二：手动复制公钥"></a>方法二：手动复制公钥</h3><p>如果自动复制方法不工作，可以手动复制公钥：</p><ol><li><p>在Windows上显示公钥内容并复制：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> <span class="variable">$env:USERPROFILE</span>\.ssh\id_ed25519.pub</span><br></pre></td></tr></table></figure></li><li><p>在Linux虚拟机上创建SSH目录并粘贴公钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建.ssh目录（如果不存在）</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将复制的公钥内容粘贴到authorized_keys文件中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;在这里粘贴从Windows复制的公钥内容&quot;</span> &gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置SSH服务权限"><a href="#配置SSH服务权限" class="headerlink" title="配置SSH服务权限"></a>配置SSH服务权限</h2><p>SSH对安全性要求极高，如果目录或文件权限不正确，会直接拒绝读取密钥。</p><p>在Linux虚拟机终端中，执行以下命令设置正确的权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><ul><li><code>700</code> 权限意味着只有您自己（用户）可以读、写和执行这个目录</li><li><code>600</code> 权限意味着只有您自己可以读、写这个文件</li></ul><h2 id="配置SSH服务器选项"><a href="#配置SSH服务器选项" class="headerlink" title="配置SSH服务器选项"></a>配置SSH服务器选项</h2><p>确认SSH服务器是否允许公钥认证：</p><ol><li><p>在Linux虚拟机中，使用文本编辑器打开SSH服务器配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>确保以下配置项设置正确（取消注释并设置为如下值）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- `PubkeyAuthentication yes`：确保允许公钥认证</span><br><span class="line">  - `AuthorizedKeysFile .ssh/authorized_keys`：指定授权密钥文件位置</span><br><span class="line">  - `PasswordAuthentication yes`：**暂时**开启密码登录，这样即使公钥有问题，我们也能通过正确的密码登录来修复。等我们用密钥免密登录成功后，再把它改回 `no` 以增强安全性(不改也没问题)</span><br></pre></td></tr></table></figure></li><li><p>保存修改后重启SSH服务使配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart sshd  <span class="comment"># Ubuntu</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl restart sshd  <span class="comment"># Arch Linux</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="安装和配置VSCode-Remote-SSH扩展"><a href="#安装和配置VSCode-Remote-SSH扩展" class="headerlink" title="安装和配置VSCode Remote-SSH扩展"></a>安装和配置VSCode Remote-SSH扩展</h2><h3 id="安装必要的扩展"><a href="#安装必要的扩展" class="headerlink" title="安装必要的扩展"></a>安装必要的扩展</h3><ol><li>打开VSCode</li><li>进入扩展面板（Ctrl+Shift+X）</li><li>搜索并安装以下扩展：<ul><li>Remote - SSH</li><li>Remote - SSH: Editing Configuration Files</li></ul></li></ol><p><img src="/../../my-blog/source/img/%E8%BF%9C%E7%A8%8B1.png" alt="VSCode扩展安装"><br><img src="/../../my-blog/source/img/%E8%BF%9C%E7%A8%8B2.png" alt="Remote-SSH扩展"><br><img src="/../../my-blog/source/img/%E8%BF%9C%E7%A8%8B3.png" alt="Remote-SSH配置文件扩展"></p><h3 id="配置SSH连接"><a href="#配置SSH连接" class="headerlink" title="配置SSH连接"></a>配置SSH连接</h3><ol><li>按 <code>Ctrl+Shift+P</code> 打开命令面板</li><li>输入 “Remote-SSH: Connect to Host…” 并选择</li><li>选择 “Add New SSH Host…”</li><li>输入SSH连接命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@ip_address</span><br></pre></td></tr></table></figure>将 <code>username</code> 替换为虚拟机用户名，<code>ip_address</code> 替换为虚拟机IP地址</li></ol><p><img src="/../../my-blog/source/img/%E8%BF%9C%E7%A8%8B4.png" alt="添加SSH主机"></p><ol start="5"><li>选择SSH配置文件位置（通常选择第一个选项即可）</li></ol><p><img src="/../../my-blog/source/img/%E8%BF%9C%E7%A8%8B5.png" alt="选择配置文件"></p><h3 id="连接到虚拟机"><a href="#连接到虚拟机" class="headerlink" title="连接到虚拟机"></a>连接到虚拟机</h3><ol><li>再次按 <code>Ctrl+Shift+P</code> 打开命令面板</li><li>输入 “Remote-SSH: Connect to Host…” 并选择</li><li>从列表中选择刚才配置的主机</li><li>如果一切配置正确，VSCode将直接连接到虚拟机，无需输入密码</li></ol><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><p>如果连接失败，请按以下步骤排查：</p><ol><li><p>在PowerShell中测试SSH连接：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@ip_address</span><br></pre></td></tr></table></figure><p>如果提示输入密码，则说明SSH密钥认证未正确配置。</p></li><li><p>检查虚拟机上的SSH服务状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status ssh   <span class="comment"># Ubuntu</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl status sshd  <span class="comment"># Arch Linux</span></span><br></pre></td></tr></table></figure></li><li><p>检查SSH配置文件中的关键设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure></li><li><p>确认文件权限设置正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过以上步骤，您应该能够成功使用VSCode连接到Linux虚拟机进行远程开发。这种方法不仅适用于虚拟机，同样适用于远程服务器。SSH密钥认证提供了安全且便捷的连接方式，避免了每次都需要输入密码的麻烦。</p><p>配置成功后，您就可以在本地VSCode中直接编辑远程服务器或虚拟机上的文件，享受与本地开发几乎一致的体验，同时利用远程服务器的性能优势。</p>]]></content>
      
      
      <categories>
          
          <category> 软件指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> 技术教程 </tag>
            
            <tag> VSCode </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMWare Workstation Player 免费版下载安装指南</title>
      <link href="/2025/09/08/vmware/"/>
      <url>/2025/09/08/vmware/</url>
      
        <content type="html"><![CDATA[<p>VMware Workstation Player 是一款功能强大的桌面虚拟化软件，它允许用户在单一计算机上同时运行多个操作系统。对于开发者、测试人员或想要体验不同操作系统的普通用户来说，这是一款非常实用的工具。本文将详细介绍如何从 VMWare 官网免费下载和安装 VMWare Workstation Player。</p><h3 id="第一步：访问-VMWare-官网"><a href="#第一步：访问-VMWare-官网" class="headerlink" title="第一步：访问 VMWare 官网"></a>第一步：访问 VMWare 官网</h3><p>首先，进入 VMWare 的官方网站：<a href="https://www.vmware.com/">https://www.vmware.com/</a></p><p><img src="/../img/vm1.png" alt="访问 VMWare 官网"></p><h3 id="第二步：搜索-VMWare-Workstation-Player"><a href="#第二步：搜索-VMWare-Workstation-Player" class="headerlink" title="第二步：搜索 VMWare Workstation Player"></a>第二步：搜索 VMWare Workstation Player</h3><p>在官网页面中，找到并点击搜索功能，输入 “Desktop Hypervisor” 或者 “VMware Workstation Player” 进行搜索。通常，你可以在“产品”菜单下找到相关链接。</p><p><img src="/../img/vm2.png" alt="搜索 Desktop Hypervisor"></p><p>在搜索结果中，选择适用于个人使用的免费版本，即 VMWare Workstation Player。</p><p><img src="/../img/vm3.png" alt="选择 VMWare Workstation Player"></p><p><img src="/../img/vm4.png" alt="点击下载"></p><h3 id="第三步：注册-VMWare-账户"><a href="#第三步：注册-VMWare-账户" class="headerlink" title="第三步：注册 VMWare 账户"></a>第三步：注册 VMWare 账户</h3><p>在下载之前，VMWare 会要求你登录或创建一个账户。如果你没有账户，请点击注册。</p><p><img src="/../img/vm5.png" alt="进入注册页面"></p><p>请按照表单要求填写你的个人信息以完成注册。</p><p><img src="/../img/vm6.png" alt="填写注册信息"></p><h3 id="第四步：登录并完成信息登记"><a href="#第四步：登录并完成信息登记" class="headerlink" title="第四步：登录并完成信息登记"></a>第四步：登录并完成信息登记</h3><p>注册完成后，使用你的注册邮箱和设置的密码进行登录。(也许是你邮箱的密码也许是你注册时的密码，这点我不清楚因为我邮箱密码和注册密码好像是一样的)</p><p><img src="/../img/vm7.png" alt="输入邮箱和密码登录"></p><p>登录后，系统可能会要求你完成一些额外的信息登记。</p><p><img src="/../img/vm8.png" alt="完成信息登记"></p><p><img src="/../img/truevm9.png" alt="确认信息"></p><p><img src="/../img/truevm10%20(2).png" alt="确认信息步骤"></p><p>在同意许可协议时，请确保先勾选相关选项。</p><p><img src="/../img/vm9.png" alt="同意许可协议"></p><p><img src="/../img/vm10.png" alt="同意协议后继续"></p><p><img src="/../img/vm11.png" alt="继续下一步"></p><p>根据提示填写一些额外信息lastname和firstname我填的是注册时的，其他信息是乱填的，然后点击“Submit”提交。</p><p><img src="/../img/vm12.png" alt="填写额外信息"></p><h3 id="第五步：下载安装程序"><a href="#第五步：下载安装程序" class="headerlink" title="第五步：下载安装程序"></a>第五步：下载安装程序</h3><p>完成以上所有步骤后，你将看到最终的下载页面。点击下载按钮，即可开始下载 VMWare Workstation Player 的安装程序。</p><p><img src="/../img/vm11.png" alt="点击下载按钮"></p><p>下载完成后，双击安装文件，按照提示一步步完成安装即可。希望这篇指南对你有所帮助！</p>]]></content>
      
      
      <categories>
          
          <category> 软件指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> 技术教程 </tag>
            
            <tag> VMWare </tag>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux 虚拟机安装指南</title>
      <link href="/2025/01/13/Arch%20Linux%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
      <url>/2025/01/13/Arch%20Linux%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>本指南将详细引导您在虚拟机中完成 Arch Linux 的安装与配置，并完整保留了操作过程中的详细步骤与说明。</p><hr><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="步骤-1：下载-Arch-Linux-ISO-镜像"><a href="#步骤-1：下载-Arch-Linux-ISO-镜像" class="headerlink" title="步骤 1：下载 Arch Linux ISO 镜像"></a>步骤 1：下载 Arch Linux ISO 镜像</h3><p>首先，您需要从官方网站获取 Arch Linux 的安装镜像 (ISO 文件)。这是最安全可靠的来源。</p><ul><li><strong>官方下载页面：</strong> <a href="https://archlinux.org/download/">https://archlinux.org/download/</a></li></ul><blockquote><p><strong>如何选择下载链接？</strong></p><p>在下载页面，向下滚动找到 <strong>“HTTP Direct Downloads”</strong> 部分。这里列出了全球各地的镜像服务器。为获得最佳下载速度，建议中国大陆用户选择 “China” 分类下的镜像站点，例如：</p><ul><li><strong>清华大学开源软件镜像站:</strong> <code>https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/</code></li><li><strong>中国科学技术大学开源软件镜像站:</strong> <code>https://mirrors.ustc.edu.cn/archlinux/iso/latest/</code></li></ul><p>进入镜像站点后，点击以 <code>.iso</code> 结尾的最新文件（如 <code>archlinux-2025.08.01-x86_64.iso</code>）即可开始下载。</p></blockquote><h3 id="步骤-2：配置虚拟机"><a href="#步骤-2：配置虚拟机" class="headerlink" title="步骤 2：配置虚拟机"></a>步骤 2：配置虚拟机</h3><p>在您的虚拟化软件（如 VMware, VirtualBox）中创建一个新的虚拟机。以下是关键配置步骤的图文说明。</p><ul><li><strong>操作系统类型与命名</strong></li></ul><p><img src="/img/PixPin_2025-08-13_15-55-50.png" alt="操作系统类型选择"><br><img src="/img/PixPin_2025-08-13_15-56-18.png" alt="虚拟机命名"></p><ul><li><strong>处理器与内存</strong></li></ul><blockquote><p>分配的核心总数<strong>不要超过</strong>您电脑的逻辑处理器上限。内存建议分配 <strong>4GB 或以上</strong>。</p></blockquote><p><img src="/img/PixPin_2025-08-13_15-57-14.png" alt="处理器配置"><br><img src="/img/PixPin_2025-08-13_15-59-43.png" alt="内存配置"><br><img src="/img/PixPin_2025-08-13_16-54-27.png" alt="虚拟机设置"></p><ul><li><strong>硬盘</strong></li></ul><blockquote><p>选择”创建新的虚拟磁盘”，建议容量为 <strong>50GB 或以上</strong>。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-01-47.png" alt="硬盘配置"></p><blockquote><p>因为我们是新建的虚拟机，所以选择创建新磁盘，而不是使用现有磁盘。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-02-14.png" alt="创建新磁盘"><br><img src="/img/PixPin_2025-08-13_16-03-25.png" alt="磁盘容量设置"></p><ul><li><strong>完成创建</strong></li></ul><blockquote><p>后续步骤若无特殊需求，保持默认推荐选项即可。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-04-21.png" alt="完成虚拟机创建"><br><img src="/img/PixPin_2025-08-13_16-05-42.png" alt="虚拟机创建完成"></p><ul><li><strong>加载ISO并启动</strong></li></ul><blockquote><p>在虚拟机设置中，将下载好的 Arch Linux ISO 文件加载到虚拟光驱中，然后启动虚拟机。</p></blockquote><p><img src="/img/PixPin_2025-08-13_18-15-07.png" alt="加载ISO文件"></p><blockquote><p><strong>注意：</strong> 启动时如果出现如下提示，点击”否”即可。</p></blockquote><blockquote><p><img src="/img/PixPin_2025-08-13_16-59-37.png" alt="启动提示"></p></blockquote><p>完成以上设置后，启动虚拟机。</p><hr><h2 id="二、系统安装"><a href="#二、系统安装" class="headerlink" title="二、系统安装"></a>二、系统安装</h2><h3 id="步骤-1：启动进入安装环境"><a href="#步骤-1：启动进入安装环境" class="headerlink" title="步骤 1：启动进入安装环境"></a>步骤 1：启动进入安装环境</h3><p>启动虚拟机后，会看到一个启动菜单。选择第一个选项 <code>Arch Linux install medium</code>，系统将自动加载并进入一个临时的命令行安装环境。</p><p><img src="/img/PixPin_2025-08-13_16-19-47.png" alt="Arch Linux 启动菜单"></p><h3 id="步骤-2：验证网络连接"><a href="#步骤-2：验证网络连接" class="headerlink" title="步骤 2：验证网络连接"></a>步骤 2：验证网络连接</h3><p>Arch Linux 的安装过程需要网络连接。在虚拟机中，网络通常会自动配置好。您可以通过 <code>ping</code> 命令来测试网络连通性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping archlinux.org</span><br></pre></td></tr></table></figure><blockquote><p>如果能收到来自服务器的回复 (reply)，则说明网络正常。按 <code>Ctrl+C</code> 可以停止 <code>ping</code> 命令。</p></blockquote><h3 id="步骤-3：磁盘分区-cfdisk"><a href="#步骤-3：磁盘分区-cfdisk" class="headerlink" title="步骤 3：磁盘分区 (cfdisk)"></a>步骤 3：磁盘分区 (<code>cfdisk</code>)</h3><p>这是整个安装过程中最关键也最容易出错的一步。我们将使用 <code>cfdisk</code> 这个相对友好的工具来为虚拟硬盘分区。</p><p>在终端中输入以下命令启动分区工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/sda</span><br></pre></td></tr></table></figure><h4 id="3-1-选择分区表类型"><a href="#3-1-选择分区表类型" class="headerlink" title="3.1 选择分区表类型"></a>3.1 选择分区表类型</h4><blockquote><p><code>cfdisk</code> 首先会要求您选择分区表类型。对于现代计算机和UEFI启动，<strong><code>gpt</code> 是唯一正确的选择</strong>。直接按回车键确认即可。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-14-09.png" alt="选择分区表类型"></p><h4 id="3-2-创建分区"><a href="#3-2-创建分区" class="headerlink" title="3.2 创建分区"></a>3.2 创建分区</h4><blockquote><p>您现在会看到 <code>cfdisk</code> 的主界面。我们将创建两个最核心的分区：一个用于启动 (EFI)，一个用于存放系统 (根分区)。</p></blockquote><p><img src="/img/PixPin_2025-08-13_16-15-54.png" alt="cfdisk 主界面"></p><p><strong>第一步：创建 EFI 启动分区</strong></p><p>这个分区是启动系统所必需的。</p><ol><li>确保 <code>&gt;&gt; Free space</code> (空闲空间) 这一行被选中（它默认就是选中的）。</li><li>在键盘上，使用左右箭头键移动到屏幕下方的 <strong><code>[ New ]</code></strong> 选项上，然后按 <strong>回车 (Enter)</strong> 键。</li><li>它会提示您输入分区大小 <code>Partition size</code>。请输入 <code>512M</code> 然后按 <strong>回车</strong>。（512MB 对于启动分区来说绰绰有余）。</li><li>创建后，您会看到一个新的分区 <code>/dev/sda1</code>。现在需要把它标记为启动分区。确保 <code>/dev/sda1</code> 这一行被选中，然后移动到下方的 <strong><code>[ Type ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>在弹出的类型列表中，使用上下箭头键找到并选中 <strong><code>EFI System</code></strong>，然后按 <strong>回车</strong>。</li></ol><blockquote><p>做完这一步，您的屏幕看起来应该像这样： <code>Device Size Type</code> <code>/dev/sda1 512M EFI System</code></p></blockquote><p><strong>第二步：创建根 (Root) 分区</strong></p><p>这个分区用来存放整个操作系统。</p><ol><li>使用向下箭头键，选中剩下的那一行 <code>Free space</code> (大约 49.5G)。</li><li>和刚才一样，移动到下方的 <strong><code>[ New ]</code></strong> 并按 <strong>回车</strong>。</li><li>它会再次提示输入分区大小。这次我们想用掉所有剩余空间，所以<strong>直接按回车</strong>即可，不需要输入任何数字。</li><li>创建后，您会看到第二个分区 <code>/dev/sda2</code>。它的默认类型 <code>Linux filesystem</code> 就是我们想要的，<strong>无需更改</strong>。</li></ol><p><strong>第三步：保存并写入更改 (最关键!)</strong></p><p>到目前为止，所有的操作都还只是预演。必须执行”写入”操作才会真正生效。</p><ol><li>移动到屏幕下方的 <strong><code>[ Write ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>它会用英文警告您，这个操作会把分区表写入磁盘。它会问 <code>Are you sure you want to write the partition table to disk?</code> (您确定要把分区表写入磁盘吗？)。</li><li><strong>输入 <code>yes</code></strong> 然后按 <strong>回车</strong> 确认。</li></ol><p><img src="/img/PixPin_2025-08-13_16-17-29.png" alt="写入分区表确认"></p><blockquote><p>当您完成以上所有步骤后，您的分区方案如下：</p><table><thead><tr><th>分区 (设备)</th><th>大小 (Size)</th><th>类型 (Type)</th><th>用途</th></tr></thead><tbody><tr><td><code>/dev/sda1</code></td><td>512M</td><td>EFI System</td><td><strong>启动分区</strong> (存放引导程序)</td></tr><tr><td><code>/dev/sda2</code></td><td>约 49.5G</td><td>Linux 文件系统</td><td><strong>根分区</strong> (存放操作系统)</td></tr></tbody></table></blockquote><p><strong>第四步：退出分区工具</strong></p><ol><li>移动到屏幕下方的 <strong><code>[ Quit ]</code></strong> 选项，按 <strong>回车</strong>。</li><li>您将会退出 <code>cfdisk</code> 工具，并返回到黑色的命令行界面。</li></ol><h3 id="步骤-4：格式化分区和挂载"><a href="#步骤-4：格式化分区和挂载" class="headerlink" title="步骤 4：格式化分区和挂载"></a>步骤 4：格式化分区和挂载</h3><p>分区完成后，需要对它们进行格式化，然后挂载到指定目录。</p><ul><li><p><strong>格式化 EFI 分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F32 /dev/sda1</span><br></pre></td></tr></table></figure></li><li><p><strong>格式化根分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda2</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>关于交换空间 (Swap) 怎么办？</strong></p><p>您不用担心。我们可以在系统安装完成之后，在根分区里创建一个<code>swapfile</code>（交换文件），这是比创建独立 <code>swap</code> 分区更现代、更灵活的方式。<strong>现在请先不要处理 swap 的问题。</strong></p></blockquote><p>接下来，开始挂载。</p><p><strong>第一步：挂载根分区</strong></p><blockquote><p>这个命令告诉系统，<code>/mnt</code> 目录就是我们即将安装的 Arch Linux 的根目录 (<code>/</code>)。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda2 /mnt</span><br></pre></td></tr></table></figure><blockquote><p>（执行这条命令后，如果没报错，就说明成功了）</p></blockquote><p><strong>第二步：创建启动挂载点</strong></p><blockquote><p>在刚刚挂载好的根目录里，创建一个叫 <code>boot</code> 的文件夹。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/boot</span><br></pre></td></tr></table></figure><p><strong>第三步：挂载 EFI 启动分区</strong></p><blockquote><p>将您的 EFI 启动分区 (<code>/dev/sda1</code>) 挂载到刚刚创建的 <code>/mnt/boot</code> 目录上。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure><p><strong>第四步：检查挂载状态</strong></p><blockquote><p>当您完成以上<strong>全部三步</strong>操作后，可以输入以下命令来检查挂载状态：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><blockquote><p>您应该会看到类似下面的输出，<code>sda1</code> 和 <code>sda2</code> 都有了对应的 <code>MOUNTPOINT</code> (挂载点)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS</span><br><span class="line">sda      8:0    0   50G  0 disk</span><br><span class="line">├─sda1   8:1    0  512M  0 part /mnt/boot</span><br><span class="line">└─sda2   8:2    0 49.5G  0 part /mnt</span><br></pre></td></tr></table></figure><p>如果您的输出和这个结构类似，就说明挂载圆满成功，您可以进行下一步了。</p></blockquote><h3 id="步骤-5：更新镜像列表（可选但推荐）"><a href="#步骤-5：更新镜像列表（可选但推荐）" class="headerlink" title="步骤 5：更新镜像列表（可选但推荐）"></a>步骤 5：更新镜像列表（可选但推荐）</h3><p>为了在安装基本系统时获得更快的下载速度，建议先更新软件源镜像列表，优先使用国内的服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reflector --verbose --country China --age 12 --protocol https --<span class="built_in">sort</span> rate --latest 6 --save /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h3 id="步骤-6：安装基本系统-pacstrap"><a href="#步骤-6：安装基本系统-pacstrap" class="headerlink" title="步骤 6：安装基本系统 (pacstrap)"></a>步骤 6：安装基本系统 (<code>pacstrap</code>)</h3><p>现在，我们使用 <code>pacstrap</code> 命令将 Arch Linux 的核心软件包安装到刚刚挂载好的根分区 (<code>/mnt</code>) 中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap -K /mnt base linux linux-firmware</span><br></pre></td></tr></table></figure><blockquote><p><strong>关于安装过程中的警告信息：</strong></p><p>您可能会在屏幕上看到许多黄色的 <code>WARNING: Possibly missing firmware for module: ...</code> 信息。</p><ul><li><strong>这是什么？</strong> 这是因为 <code>linux-firmware</code> 包包含了海量硬件的固件，而安装程序检测到您的虚拟机环境并不需要其中大部分（例如服务器专用网卡的固件）。</li><li><strong>需要处理吗？</strong> <strong>完全不需要。</strong> 这些警告是正常现象，可以安全地忽略，对您的系统没有任何影响。</li></ul></blockquote><hr><h2 id="三、系统配置"><a href="#三、系统配置" class="headerlink" title="三、系统配置"></a>三、系统配置</h2><h3 id="步骤-1：进入新系统-arch-chroot"><a href="#步骤-1：进入新系统-arch-chroot" class="headerlink" title="步骤 1：进入新系统 (arch-chroot)"></a>步骤 1：进入新系统 (<code>arch-chroot</code>)</h3><p>安装完基本系统后，我们需要进入到这个新系统中进行配置。<code>arch-chroot</code> 命令可以让我们仿佛”登录”到 <code>/mnt</code> 目录下的新系统里。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><blockquote><p><strong>关键变化：</strong> 执行此命令后，您会发现命令提示符从 <code>root@archiso ~ #</code> 变成了 <code>[root@archiso /]#</code>。这个变化标志着您已经成功进入了硬盘上的新系统。从现在起，所有命令都将直接作用于您的系统。</p></blockquote><h3 id="步骤-2：设置时区"><a href="#步骤-2：设置时区" class="headerlink" title="步骤 2：设置时区"></a>步骤 2：设置时区</h3><p>将系统时区设置为上海，并同步硬件时钟。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="步骤-3：本地化-Localization"><a href="#步骤-3：本地化-Localization" class="headerlink" title="步骤 3：本地化 (Localization)"></a>步骤 3：本地化 (Localization)</h3><p>此步骤用于配置系统的语言和字符集。</p><ol><li><p><strong>安装文本编辑器:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S nano</span><br></pre></td></tr></table></figure></li><li><p><strong>编辑 <code>/etc/locale.gen</code> 文件:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br></pre></td></tr></table></figure><blockquote><p>在 <code>nano</code> 编辑器中，您需要找到并取消注释（即删除行首的 <code>#</code>）以下两行：</p><ul><li><code>en_US.UTF-8 UTF-8</code></li><li><code>zh_CN.UTF-8 UTF-8</code></li></ul><p><strong>Nano 操作技巧：</strong></p><ul><li>使用 <code>Ctrl + W</code> 搜索关键字（如 <code>en_US.UTF-8</code>）。</li><li>使用方向键和退格键删除 <code>#</code>。</li><li>完成后，按 <code>Ctrl + X</code> 退出，程序会提示是否保存，按 <code>Y</code> 确认，然后按回车键确认文件名。</li></ul></blockquote></li><li><p><strong>生成 Locale:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure></li><li><p><strong>创建 <code>locale.conf</code> 文件:</strong></p><p>此文件用于设定系统的默认语言。这里我们设为美式英语。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LANG=en_US.UTF-8&quot;</span> &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-4：设置主机名"><a href="#步骤-4：设置主机名" class="headerlink" title="步骤 4：设置主机名"></a>步骤 4：设置主机名</h3><p>主机名是您的计算机在网络中的名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;my-arch-vm&quot;</span> &gt; /etc/hostname</span><br></pre></td></tr></table></figure><blockquote><p>您可以将 <code>my-arch-vm</code> 替换为您喜欢的任何名字。</p></blockquote><h3 id="步骤-5：设置-Root-用户密码"><a href="#步骤-5：设置-Root-用户密码" class="headerlink" title="步骤 5：设置 Root 用户密码"></a>步骤 5：设置 Root 用户密码</h3><p><code>root</code> 是系统的超级管理员用户，必须为其设置一个安全的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><blockquote><p>按照提示，输入两次新密码。注意，输入时屏幕不会有任何显示，这是正常的安全机制。</p></blockquote><h3 id="步骤-6：安装并配置引导加载程序-GRUB"><a href="#步骤-6：安装并配置引导加载程序-GRUB" class="headerlink" title="步骤 6：安装并配置引导加载程序 (GRUB)"></a>步骤 6：安装并配置引导加载程序 (GRUB)</h3><p>引导加载程序（Bootloader）是开机时第一个运行的软件，负责加载操作系统。</p><ol><li><p><strong>安装 GRUB 和相关工具:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr</span><br></pre></td></tr></table></figure></li><li><p><strong>部署 GRUB 到 EFI 分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB</span><br></pre></td></tr></table></figure></li><li><p><strong>生成 GRUB 配置文件:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="四、完成安装与首次启动"><a href="#四、完成安装与首次启动" class="headerlink" title="四、完成安装与首次启动"></a>四、完成安装与首次启动</h2><h3 id="步骤-1：退出-Chroot-环境并关机"><a href="#步骤-1：退出-Chroot-环境并关机" class="headerlink" title="步骤 1：退出 Chroot 环境并关机"></a>步骤 1：退出 Chroot 环境并关机</h3><p>所有配置已完成。现在可以安全地退出并关机了。</p><ol><li><p><strong>退出 Chroot:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>此时，命令提示符会恢复为 <code>root@archiso ~ #</code>。</p></blockquote></li><li><p><strong>卸载分区:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -R /mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>关机:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown now</span><br></pre></td></tr></table></figure></li></ol><h3 id="步骤-2：移除-ISO-并重启"><a href="#步骤-2：移除-ISO-并重启" class="headerlink" title="步骤 2：移除 ISO 并重启"></a>步骤 2：移除 ISO 并重启</h3><p>在虚拟机完全关机后，<strong>务必在虚拟机设置中移除或断开 ISO 镜像文件</strong>，否则下次开机又会进入安装环境。</p><p>完成此操作后，重新启动虚拟机。</p><h3 id="步骤-3：登录新系统"><a href="#步骤-3：登录新系统" class="headerlink" title="步骤 3：登录新系统"></a>步骤 3：登录新系统</h3><p>如果一切顺利，您将看到黑色的命令行登录界面。</p><ol><li><strong>输入用户名:</strong> 在 <code>login:</code> 提示符后，输入 <code>root</code>，按回车。</li><li><strong>输入密码:</strong> 输入您之前为 <code>root</code> 用户设置的密码，按回车。</li></ol><p>成功登录后，您将看到 <code>[root@my-arch-vm ~]#</code> 这样的命令提示符。</p><p><strong>恭喜！您已成功安装并登录了您亲手打造的 Arch Linux 系统。</strong></p><hr><h2 id="五、网络配置故障排除"><a href="#五、网络配置故障排除" class="headerlink" title="五、网络配置故障排除"></a>五、网络配置故障排除</h2><h3 id="一、问题现象"><a href="#一、问题现象" class="headerlink" title="一、问题现象"></a>一、问题现象</h3><p>在 Arch Linux 虚拟机完成基础安装后，执行以下操作时出现典型网络故障：</p><ol><li><p><strong>尝试更新系统时失败：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacman -Syu</span></span><br><span class="line">error: failed retrieving file <span class="string">&#x27;core.db&#x27;</span> from mirrors...</span><br><span class="line">warning: failed to retrieve some files</span><br></pre></td></tr></table></figure></li><li><p><strong>尝试进行域名解析时失败：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ping archlinux.org</span></span><br><span class="line">ping: archlinux.org: Temporary failure <span class="keyword">in</span> name resolution</span><br></pre></td></tr></table></figure></li></ol><p>此时，系统虽然具备基础网络功能，但无法访问互联网资源，表现为软件源连接失败和 DNS 解析错误。</p><hr><h3 id="二、根本原因分析"><a href="#二、根本原因分析" class="headerlink" title="二、根本原因分析"></a>二、根本原因分析</h3><p>通过分层排查，我们可以定位问题的根源：</p><table><thead><tr><th align="left">网络层次</th><th align="left">命令&#x2F;操作</th><th align="left">现象&#x2F;输出</th><th align="left">结论</th></tr></thead><tbody><tr><td align="left"><strong>应用层</strong></td><td align="left"><code>pacman -Syu</code></td><td align="left"><code>failed retrieving file</code></td><td align="left">无法访问软件源</td></tr><tr><td align="left"><strong>DNS 解析层</strong></td><td align="left"><code>ping archlinux.org</code></td><td align="left"><code>Temporary failure in name resolution</code></td><td align="left">DNS 配置缺失或错误</td></tr><tr><td align="left"><strong>网络管理服务</strong></td><td align="left"><code>systemctl status NetworkManager</code></td><td align="left"><code>Unit NetworkManager.service could not be found</code></td><td align="left">未安装网络管理工具</td></tr><tr><td align="left"><strong>物理链路层</strong></td><td align="left"><code>ip link show</code></td><td align="left"><code>ens33: DOWN</code></td><td align="left">网卡未被管理或处于关闭状态</td></tr></tbody></table><p><strong>核心矛盾</strong>：系统因未安装网络管理服务（如 NetworkManager）而无法自动配置网络；而安装网络管理工具又必须依赖网络连接。这形成了一个典型的”初始网络配置死锁”。</p><hr><h3 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h3><p>我们将分三个阶段解决此问题：</p><ol><li><strong>第一阶段</strong>：手动启用 <code>systemd-networkd</code> 服务，建立临时网络连接。</li><li><strong>第二阶段</strong>：解决 <code>pacman</code> 镜像源访问缓慢或失败的问题。</li><li><strong>第三阶段</strong>：安装并切换到功能更强大的 <code>NetworkManager</code> 作为永久网络方案。</li></ol><h4 id="第一阶段：激活网卡并配置-systemd-networkd"><a href="#第一阶段：激活网卡并配置-systemd-networkd" class="headerlink" title="第一阶段：激活网卡并配置 systemd-networkd"></a>第一阶段：激活网卡并配置 systemd-networkd</h4><p>这是解决问题的核心步骤。我们将手动激活网卡，并使用系统内置的 <code>systemd-networkd</code> 服务来自动获取 IP 和 DNS。</p><ol><li><p><strong>激活网络接口</strong></p><p>运行以下命令，将名为 <code>ens33</code> 的网卡从 <code>DOWN</code> 状态切换为 <code>UP</code> 状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> ens33 up</span><br></pre></td></tr></table></figure></li><li><p><strong>创建网络配置文件</strong></p><p>使用 <code>nano</code> 编辑器创建一个新的网络配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/systemd/network/20-wired.network</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示</strong>：如果提示目录 <code>/etc/systemd/network</code> 不存在，请先创建它：<code>mkdir -p /etc/systemd/network</code></p></blockquote></li><li><p><strong>写入配置内容</strong></p><p>在打开的 <code>nano</code> 编辑器中，输入以下内容。这会告诉系统对 <code>ens33</code> 接口使用 DHCP（动态主机配置协议）来自动获取网络配置。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Match]</span></span><br><span class="line"><span class="attr">Name</span>=ens33</span><br><span class="line"></span><br><span class="line"><span class="section">[Network]</span></span><br><span class="line"><span class="attr">DHCP</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>完成后，按 <code>Ctrl+X</code> 保存，接着按 <code>Y</code> 确认，最后按 <code>Enter</code> 退出。</p></li><li><p><strong>启动网络与 DNS 服务</strong></p><p>启动 <code>systemd-networkd</code> (负责网络连接) 和 <code>systemd-resolved</code> (负责 DNS 解析) 两个核心服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start systemd-networkd</span><br><span class="line">systemctl start systemd-resolved</span><br></pre></td></tr></table></figure></li><li><p><strong>建立永久网络连接</strong></p><p>要建立永久网络连接，需要启用服务以便在系统启动时自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> systemd-networkd</span><br><span class="line">systemctl <span class="built_in">enable</span> systemd-resolved</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：<code>start</code> 命令只在当前会话中启动服务，而 <code>enable</code> 命令会创建符号链接，使服务在系统启动时自动启动，从而建立永久网络连接。</p></blockquote></li><li><p><strong>配置 DNS 解析文件</strong></p><p>这是确保域名能被正确解析的关键一步。运行以下命令，将系统的 DNS 解析配置链接到 <code>systemd-resolved</code> 生成的配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf</span><br></pre></td></tr></table></figure></li><li><p><strong>验证网络连接</strong></p><p>稍等几秒钟，然后测试网络。如果一切顺利，你应该能看到来自服务器的回应。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping archlinux.org</span><br></pre></td></tr></table></figure><p>看到回应后，按 <code>Ctrl+C</code> 停止 ping。这表示临时网络已成功建立。</p></li></ol><hr><h2 id="四、创建普通用户（推荐）"><a href="#四、创建普通用户（推荐）" class="headerlink" title="四、创建普通用户（推荐）"></a>四、创建普通用户（推荐）</h2><p>出于安全考虑，在日常使用中应避免以 root 用户身份登录系统。我们需要创建一个普通用户，并赋予其使用 sudo 命令获取管理员权限的能力。</p><h3 id="创建用户账户"><a href="#创建用户账户" class="headerlink" title="创建用户账户"></a>创建用户账户</h3><p>使用 useradd 命令创建一个新用户。我们以创建名为 myuser 的用户为例（请将 myuser 替换为您想要的用户名）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel -s /bin/bash myuser</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>useradd</code>：创建用户的命令</li><li><code>-m</code>：非常重要！同时创建用户的家目录（通常是 &#x2F;home&#x2F;myuser）</li><li><code>-G wheel</code>：将用户添加到 wheel 组，该组在 Arch Linux 中默认被配置为可以通过 sudo 获得 root 权限</li><li><code>-s /bin/bash</code>：设置用户的默认登录 shell 为 bash</li><li><code>myuser</code>：要创建的用户名</li></ul><h3 id="设置用户密码"><a href="#设置用户密码" class="headerlink" title="设置用户密码"></a>设置用户密码</h3><p>创建用户后，必须为其设置密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd myuser</span><br></pre></td></tr></table></figure><p>系统会提示您输入两次新密码。输入时密码不会显示出来。</p><p>现在，您已经成功创建了一个具有 sudo 权限的普通用户。</p><h3 id="使用普通用户登录"><a href="#使用普通用户登录" class="headerlink" title="使用普通用户登录"></a>使用普通用户登录</h3><p>完成用户创建后，您可以使用新创建的用户登录系统：</p><ol><li><strong>输入用户名:</strong> 在 <code>login:</code> 提示符后，输入您创建的用户名（如 myuser），按回车。</li><li><strong>输入密码:</strong> 输入您之前为该用户设置的密码，按回车。</li></ol><p>成功登录后，您将看到 <code>[myuser@my-arch-vm ~]$</code> 这样的命令提示符。</p><blockquote><p>如果您需要执行管理员操作，可以使用 <code>sudo</code> 命令，例如：<code>sudo pacman -Syu</code></p></blockquote><p>通过使用普通用户账户，您可以提高系统的安全性，遵循最小权限原则。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arch Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux安装 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
